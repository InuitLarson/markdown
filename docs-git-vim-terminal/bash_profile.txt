export PATH="/usr/local/sbin:/usr/local/bin:/usr/local/git/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH"
export PATH="~/bin:~/BASH:$PATH"

##
# Your previous /Users/Turing/.bash_profile file was backed up as /Users/Turing/.bash_profile.macports-saved_2014-07-12_at_14:55:22
# MacPorts Installer addition on 2014-07-12_at_15:07:16: adding an appropriate PATH variable for use with MacPorts.
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
# Finished adapting your PATH environment variable for use with MacPorts.

# JAVA
#export JAVA_HOME="/Library/Java/Home"
export JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home"

# ANDROID
export ANDROID="/Users/Turing/android-sdks/platform-tools:/Users/Turing/android-sdks/tools"

# APACHE ANT
export APACHE_ANT="/Users/Turing/apache-ant/bin"

export PATH=$APACHE_ANT:$ANDROID:$JAVA_HOME:$PATH

# EDITOR
export EDITOR='subl -w'

#----------
#  PROMPT 
#----------
# \e caractère d'échappement
# \h nom de l'ordinateur
# \H nom complet
# \u utilisateur
# \w chemin complet du répertoire courant
# \W répertoire courant
# \$ # si UID <> 0, $ sinon
# exemple de prompt : export PS1="→ \u@\h: \w \$"

# SET
#  1 : GRAS
#  2 : MAIGRE
#  4 : SOULIGNE
#  5 : CLIGNOTE
#  7 : INVERSE
#  8 : CACHE
# 2* : RESET

# COLORS
# 39 : DEFAULT
# 30 : NOIR
# 31 : ROUGE
# 32 : VERT
# 33 : JAUNE
# 34 : BLEU
# 35 : MAGENTA
# 36 : CYAN
# 37 : GRIS CLAIR
# 90 : GRIS FONCE
# 91 : ROUGE CLAIRE
# 92 : VERT CLAIRE
# 93 : JAUNE CLAIRE
# 94 : BLEU CLAIRE
# 95 : MAGENTA CLAIRE
# 96 : CYAN CLAIRE
# 97 : BLANC

# BACKGROUND COLORS
# 49 : DEFAULT
# 40 : NOIR
# 41 : ROUGE
# 42 : VERT
# 43 : JAUNE
# 44 : BLEU
# 45 : MAGENTA
# 46 : CYAN
# 47 : GRIS CLAIR
#100 : GRIS FONCE
#101 : ROUGE CLAIRE
#102 : VERT CLAIRE
#103 : JAUNE CLAIRE
#104 : BLEU CLAIRE
#105 : MAGENTA CLAIRE
#106 : CYAN CLAIRE
#107 : BLANC

#GIT
source ~/.git-completion.bash
source ~/.git-prompt.sh

#export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
export PS1='\e[35m\u\e[33m: \e[32;1m\w  \e[95;1m\e[34m$(__git_ps1 "[⅄ %s]")\e[33m\$\e[m '
#export PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '

#-------------
#  COLORS LS
#-------------
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
#  1. Ex : directory
#  2. Fx : symbolic link
#  3. Bx : socket
#  4. Dx : pipe
#  5. Cx : executable
#  6. eg : block special
#  7. ed : character special
#  8. ab : executable with setuid bit set
#  9. ag : executable with setgid bit set
# 10. ac : directory writable to others, with sticky bit
# 11. ad : directory writable to others, without sticky
# a black
# b red
# c green
# d brown
# e blue
# f magenta
# g cyan
# h light grey
# A bold black, usually shows up as dark grey
# B bold red
# C bold green
# D bold brown, usually shows up as yellow
# E bold blue
# F bold magenta
# G bold cyan
# H bold light grey; looks like bright white
# x default foreground or background

alias l='ls -al'
alias ls='ls -GFh'

#######
# GIT #
#######
alias c="clear"
alias r="reset"
alias BP='subl ~/.bash_profile'
alias gito='cd ~/GIT/'
alias SG='gito && cd seriousgame/'
alias JN='cd ~/Documents/WWW/jeunumerique/'
alias CE='gito && cd nisaba-seshat/'
alias NS='gito && cd nisaba-seshat/'
alias EP='gito && cd experiment/'
alias IO='gito && cd ionic/'
alias IOA='gito && cd ionic/lpa/'
alias I='ionic'
alias IS='ionic serve'
alias ISL='ionic serve --lab'

function gitAddCommitMsg(){ 
A=$(git symbolic-ref -q HEAD)
B=${A##*/}
git add $1
git commit -m "[inuitLarson → $B] $1:$2"
}
alias gacm=gitAddCommitMsg

function DumpSQL(){
dump_database.sh $1	
}
alias dsql='DumpSQL'

function gitDumpSQL(){
date=$(date '+%d-%m-%Y:%H:%M')
dsql $1
gacm sosql/$1-$USER.sql $date
}
alias gdsql='gitDumpSQL'
alias sosql='gdsql jeuxserieux'

function gitArchiveSQLsha1-turing(){
git archive -o sg.tar $1 sosql/jeuxserieux-Turing.sql 
}
function gitArchiveSQLsha1-orsa(){
git archive -o sg.tar $1 sosql/jeuxvideo-orsa.sql
}
alias sqlSGsha1-T=gitArchiveSQLsha1-turing
alias sqlSGsha1-O=gitArchiveSQLsha1-orsa

function drupalfr(){
git clone git@bitbucket.org:team_turing/drupalfr.git $1
}

function createLocalBranchWithTrackingOrigin(){
git checkout --track origin/$1 
}

function createDistantBranchWithTrackingOrigin(){
git push -u origin $1 
}

function extractSHAOne(){
git archive -o archive/$1.tar.gz $1 $2
cd archive && l
}

# STATUS
alias gst='clear && git status'

# LOG
alias gl='reset && git log --graph --decorate --all'
alias glo='reset && git log --pretty=oneline --abbrev-commit --graph --decorate --all'
alias glop='glo | grep'

# ADD - COMMIT
alias gc='git commit'
alias gad='git add .'
alias gadd='git add'
alias gac='git add . && git commit'
alias amend='git commit --amend'

# BRANCHE
alias gb='git branch'
alias gbb='git checkout -b'
alias gbv='git branch -vv'
alias gbr='git branch --remote'
alias gba='git branch --all'
alias gh='git checkout'
alias merge='git merge'
alias trackLoc='createLocalBranchWithTrackingOrigin'
alias trackDist='createDistantBranchWithTrackingOrigin'

# DIFF
alias gd='git diff'
alias gds='git diff --stat'
alias gdh='git diff HEAD'
alias gdc='git diff --cached'

# SYNC
alias push='git push'
alias pull='git pull'

# RESET
alias grsh='git reset --soft HEAD^'
alias grhh='git reset --hard HEAD^'

# CLONE
alias drupal='drupalfr'

# ARCHIVE
alias CHAWAN="extractSHAOne"

